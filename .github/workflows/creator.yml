name: CREATOR CI

on:
  push:
    branches: ["main", "ci"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  packages: write
  pages: write # to deploy to Pages
  id-token: write # to verify the deployment originates from an appropriate source

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-web:
    name: Build CREATOR web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install dependencies
        uses: ./.github/actions/dependencies
      - name: Build compiler web
        env:
          REPO: ${{ github.event.repository.name }}
        run: |
          bun install -g wasm-pack
          bun build:web
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/web/creatorV/

  build-cli:
    name: Build CREATOR cli
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install dependencies
        uses: ./.github/actions/dependencies
      - name: Build compiler cli
        run: bun wasm:cli
      - name: Build cli
        run: bun run-p build:cli:windows build:cli:mac-x64 build:cli:mac-arm build:cli:linux-x64 build:cli:linux-arm
      - name: Cleanup artifact
        run: |
          rm -rf node_modules
          rm -rf CreatorCompiler
      - name: Upload cli artifact
        uses: pyTooling/upload-artifact@v4
        with:
          name: cli-artifact
          working-directory: "."
          path: "*"
          if-no-files-found: error

  publish-nightly:
    name: Publish nightly release
    runs-on: ubuntu-latest
    needs: build-cli
    steps:
      - name: Download artifact
        uses: pyTooling/download-artifact@v5
        with:
          name: cli-artifact
      - name: Delete nightly tag
        run: gh release delete nightly --cleanup-tag || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish nightly release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly release
          prerelease: true
          tag_name: nightly
          target_commitish: ${{ github.sha }}
          fail_on_unmatched_files: true
          files: creator-cli-*

  publish-stable:
    name: Publish latest tagged release
    runs-on: ubuntu-latest
    needs: build-cli
    if: github.ref_type == 'tag'
    steps:
      - name: Download artifact
        uses: pyTooling/download-artifact@v5
        with:
          name: cli-artifact
      - name: Publish latest release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          fail_on_unmatched_files: true
          files: creator-cli-*

  test:
    name: Run CREATOR tests
    runs-on: ubuntu-latest
    needs: build-cli
    steps:
      - name: Download artifact
        uses: pyTooling/download-artifact@v5
        with:
          name: cli-artifact
      - name: Install dependencies
        uses: ./.github/actions/dependencies
      - name: Run tests
        run: deno test -A --unstable-node-globals --parallel --ignore=tests/unit/core/executor/decoder/

  deploy-pages-beta:
    name: Deploy CREATOR to GitHub Pages (development)
    runs-on: ubuntu-latest
    needs: build-web
    if: github.event_name != 'pull_request' && github.repository != 'creatorsim/creator'
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  # TODO: re-add this when the tests runner is updated
  # deploy-pages-stable:
  #   name: Deploy CREATOR to GitHub Pages (stable)
  #   runs-on: ubuntu-latest
  #   needs: creator-checker
  #   if: github.event_name != 'pull_request' && github.repository == 'creatorsim/creator'
  #   # Deploy to the github-pages environment
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       uses: actions/deploy-pages@v4
