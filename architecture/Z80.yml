version: 2.0.0

arch_conf:
    Name: Z80
    Word Size: 8 # 8-bit word size, which is the same as the byte size
    Description: Z80
    Data Format: little_endian
    Memory Alignment: true
    Main Function: main
    Passing Convention: true
    Sensitive Register Name: true
    CommentPrefix: ";"

components:
    - name: Control registers
      type: ctrl_registers
      double_precision: false
      elements:
          - name:
                - PC
            nbits: "16"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - program_counter
    - name: Integer registers
      type: int_registers
      double_precision: false
      elements:
          - name:
                - A
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - B
            nbits: "8"
            value: 1
            default_value: 1
            properties:
                - read
                - write
          - name:
                - C
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - D
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - E
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - H
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - L
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - A'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - B'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - C'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - D'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - E'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - H'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - L'
            nbits: "8"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - write
          - name:
                - SP
            nbits: "16"
            value: 0
            default_value: 0
            properties:
                - read
                - write
                - stack_pointer
          - name:
                - IX
            nbits: "16"
            value: 0
            default_value: 0
            properties:
                - read
                - write
          - name:
                - IY
            nbits: "16"
            value: 0
            default_value: 0
            properties:
                - read
                - write

directives:
    - name: .data
      action: data_segment
      size: null
    - name: .text
      action: code_segment
      size: null
    - name: .bss
      action: global_symbol
      size: null
    - name: .zero
      action: space
      size: 1
    - name: .space
      action: space
      size: 1
    - name: .align
      action: align
      size: null
    - name: .balign
      action: balign
      size: null
    - name: .globl
      action: global_symbol
      size: null
    - name: .string
      action: ascii_null_end
      size: null
    - name: .asciz
      action: ascii_null_end
      size: null
    - name: .ascii
      action: ascii_not_null_end
      size: null
    - name: .byte
      action: byte
      size: 1
    - name: .half
      action: half_word
      size: 2
    - name: .word
      action: word
      size: 4
    - name: .dword
      action: double_word
      size: 8
    - name: .float
      action: float
      size: 4
    - name: .double
      action: double
      size: 8

memory_layout:
    - name: text start
      value: "0x0000"
    - name: text end
      value: "0x1000"
    - name: data start
      value: "0x1010"
    - name: data end
      value: "0x2000"
    - name: stack start
      value: "0xFFFE"
    - name: stack end
      value: "0xFFFF"

templates:
    - name: oneWord
      nwords: 1
      clk_cycles: 1
      fields:
          - name: opcode
            type: co
            startbit: 7
            stopbit: 0
            order: 0
            word: 0

    - name: twoWords
      nwords: 2
      clk_cycles: 1
      fields:
          - name: opcode
            type: co
            startbit: 7
            stopbit: 0
            order: 0
            word: 0
    - name: threeWords
      nwords: 3
      clk_cycles: 1
      fields:
          - name: opcode
            type: co
            startbit: 7
            stopbit: 0
            order: 0
            word: 0

    - name: 2BOpcode
      nwords: 2
      clk_cycles: 1
      fields:
          - name: opcode1
            type: co
            startbit: 7
            stopbit: 0
            order: 0
            word: 0
          - name: opcode2
            type: cop
            startbit: 7
            stopbit: 0
            word: 1

    - name: 2BOpcode_imm
      nwords: 4
      clk_cycles: 1
      fields:
          - name: opcode1
            type: co
            startbit: 7
            stopbit: 0
            order: 0
            word: 0
          - name: opcode2
            type: cop
            startbit: 7
            stopbit: 0
            word: 1

instructions:
    base:
        - name: nop
          type: oneWord
          fields:
              - field: opcode
                value: "0x00"
          definition: ""

        - name: add
          type: oneWord
          fields:
              - field: opcode
                value: "0x80"
          definition: "A = A + B"

        - name: ld
          type: twoWords
          fields:
              - field: opcode
                value: "0x06"
              - field: imm
                type: inm-unsigned
                startbit: 7
                stopbit: 0
                order: 1
                word: 1
          definition: "B = imm"

        - name: slp
          type: 2BOpcode
          fields:
              - field: opcode1
                value: "0xED"
              - field: opcode2
                value: "0x76"
          definition: "console.log('sleep example')"

        - name: ld bc
          type: 2BOpcode_imm
          fields:
              - field: opcode1
                value: "0xED"
              - field: opcode2
                value: "0x4B"
              - field: imm
                type: inm-unsigned
                startbit: 16
                stopbit: 0
                prefix: "("
                suffix: ")"
                order: 1
                word: [2, 3]
          definition: "console.log('ld bc example')"

        #DD CB d 06 -> rlc (ix+d)
        - name: rlc
          type: 2BOpcode_imm
          fields:
              - field: opcode1
                value: "0xDD"
              - field: opcode2
                value: "0xCB"
              - field: imm
                type: inm-unsigned
                startbit: 7
                stopbit: 0
                prefix: "("
                suffix: ")"
                order: 1
                word: 2
              - field: opcode3
                type: cop
                startbit: 7
                stopbit: 0
                value: "0x06"
                word: 3

          definition: "console.log('another example')"

pseudoinstructions:
    base:
        - name: nop2
          definition: "nop"
